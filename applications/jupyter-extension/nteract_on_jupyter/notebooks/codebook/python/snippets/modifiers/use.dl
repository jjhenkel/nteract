
/* SNIPPET: [modifiers] use.dl */ 
<<$childtype [ "import_statement", "import_from_statement" ] $>> ( cost:=5
    /* We are some use of a def */
    dataflow({{fid()}}, {{rand(1)}}, {{gid()}}, "direct-use"),
    /* That def is the "alias" part of an alised_import */
    child_of({{fid()}}, _, "alias", {{rand(2)}}, {{rand(1)}}, "aliased_import", _),
    /* That aliased_import is the name of our import_statement */
    child_of({{fid()}}, _, "name", {{gid(child)}}, {{rand(2)}}, _, _)
; /* OR */
    /* We are some use of a def */
    dataflow({{fid()}}, {{rand(1)}}, {{gid()}}, "direct-use"),
    /* That def is the "alias" part of an alised_import */
    child_of({{fid()}}, _, "name", {{gid(child)}}, {{rand(1)}}, _, _)
)

<<$childtype [ "call", "string", "list", "comparison_operator", "binary_operator", "unary_operator" ] $>> ( cost:=5
    /* We are some use of a def */
    dataflow({{fid()}}, {{rand(1)}}, {{gid()}}, "direct-use"),
    /* That def is the left of some stmt */
    child_of({{fid()}}, _, "left", {{rand(2)}}, {{rand(1)}}, "assignment", _),
    /* We are the right of that stmt */
    child_of({{fid()}}, _, "right", {{rand(2)}}, {{gid(child)}}, "assignment", {{type(child)}})
;
    /* Direct use */
    {{gid()}} = {{gid(child)}}
)

