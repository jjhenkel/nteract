.type Fid <: number
.type Gid <: number
.type Tid <: number
.type Nid <: number
.type TypeName <: symbol 
.type FieldName <: symbol
.type ByteOffset <: number
.type SourceText <: symbol

.type FlowMod = symbol
.type FlowKind = symbol
.type FlowSubKind = symbol
.type FlowTarget = Gid

.decl child_of(
    fid:Fid, idx:number, field:FieldName,
    pgid:Gid, cgid:Gid, ptype:TypeName, ctype:TypeName
)
.input child_of(
    IO=parquet,
    filename="child_of",
    partition="field"
)


.decl node_info(
    fid:Fid, gid:Gid, type:TypeName,
    tid:Tid, sb:ByteOffset, sl:number,
    sr:number, sc:number, er:number, ec:number, 
    text:SourceText
)
.input node_info(
    IO=parquet,
    filename="node_info",
    partition="type"
)


.decl dataflow(
    fid:Fid, source:Gid, sink:Gid, kind:symbol
)
.input dataflow(
    IO=parquet,
    filename="dataflow",
    partition="kind"
)


.decl tdataflow(
    fid:Fid, source:Gid, sink:Gid
)
.input tdataflow(
    IO=parquet,
    filename="tdataflow",
    partition="kind"
)


.decl encloses(
    fid:Fid, parent:Gid, child:Gid
)
.input encloses(
    IO=parquet,
    filename="encloses",
    partition="fid"
)


.decl types_info(
    fid:Fid, gid:Gid, type:TypeName,
    single_type:symbol, unique_types:number, child_count:number
)
.input types_info(
    IO=parquet,
    filename="types_info",
    partition="type"
)

#include "/app/applications/jupyter-extension/nteract_on_jupyter/notebooks/codebook/python/snippets/utils.dl"
