
/* SNIPPET: [constraints] name.dl */ 
<<$type [ "call" ] $>> ( cost:=10
    (
        child_of({{fid()}}, _, "function", {{gid()}}, {{rand(1)}}, "call", "identifier"),
        node_info({{fid()}}, {{rand(1)}}, "identifier", _, _, _, _, _, _, _, {{output("name")}})
    ; /* OR */
        child_of({{fid()}}, _, "attribute", {{rand(1)}}, {{rand(2)}}, "attribute", "identifier"),
        child_of({{fid()}}, _, "function", {{gid()}}, {{rand(1)}}, "call", "attribute"),
        node_info({{fid()}}, {{rand(2)}}, "identifier", _, _, _, _, _, _, _, {{output("name")}})
    )
)

<<$type [ "import_statement", "import_from_statement" ] $>> ( cost:=10
    (
        /* Something that is the 'name' child of us */
        child_of({{fid()}}, _, "name", {{gid()}}, {{rand(1)}}, "import_statement", "aliased_import"),
        /* Something that is the 'name' child of the prev */
        child_of({{fid()}}, _, "name", {{rand(1)}}, {{rand(2)}}, "aliased_import", "dotted_name"),
        node_info({{fid()}}, {{rand(2)}}, "dotted_name", _, _, _, _, _, _, _, {{output("name")}})
        /*  ^ This covers `import pandas.blah as ...` */
    ; /* OR */
        /* Something that is the 'name' child of us */
        child_of({{fid()}}, _, "name", {{gid()}}, {{rand(1)}}, "import_statement", "dotted_name"),
        node_info({{fid()}}, {{rand(1)}}, "dotted_name", _, _, _, _, _, _, _, {{output("name")}})
        /*  ^ This covers `import pandas.blah` */
    ; /* OR */
        /* Something that is the 'module_name' child of us */
        child_of({{fid()}}, _, "module_name", {{gid()}}, {{rand(1)}}, "import_from_statement", "dotted_name"),
        node_info({{fid()}}, {{rand(1)}}, "dotted_name", _, _, _, _, _, _, _, {{output("name")}})
        /*  ^ This covers `from pandas.blah import ...` */
    )
)

<<$type [ "keyword_argument" ] $>> ( cost:=10
    /* Something that is the 'name' child of us */
    child_of({{fid()}}, _, "name", {{gid()}}, {{rand(1)}}, "keyword_argument", "identifier"),
    node_info({{fid()}}, {{rand(1)}}, "identifier", _, _, _, _, _, _, _, {{output("name")}})
    /*  ^ This covers `name=...` */
)

/* TODO: names of function/class def  ; fields ; etc. */
